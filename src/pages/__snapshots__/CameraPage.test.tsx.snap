// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CameraPage renders correcly 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="sc-bdfBwQ eJvVid"
      >
        <header
          class="MuiPaper-root MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary sc-jSgupP cfyQgS mui-fixed MuiPaper-elevation4"
        >
          <div
            class="MuiToolbar-root MuiToolbar-regular sc-gKsewC bvkgnn MuiToolbar-gutters"
          >
            <button
              aria-label="open drawer"
              class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit MuiIconButton-edgeStart"
              tabindex="0"
              type="button"
            >
              <span
                class="MuiIconButton-label"
              >
                <svg
                  aria-hidden="true"
                  class="MuiSvgIcon-root"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"
                  />
                </svg>
              </span>
              <span
                class="MuiTouchRipple-root"
              />
            </button>
          </div>
        </header>
        <div
          class="react-html5-camera-photo "
        >
          <div
            class=" normal"
            id="white-flash"
          />
          <img
            alt="camera"
            src=""
            style="display: none;"
          />
          <video
            autoplay=""
            playsinline=""
            style="transform: none; display: inline-block;"
          />
          <div
            id="container-circles"
          >
            <div
              id="outer-circle"
            >
              <div
                class=""
                id="inner-circle"
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-bdfBwQ eJvVid"
    >
      <header
        class="MuiPaper-root MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary sc-jSgupP cfyQgS mui-fixed MuiPaper-elevation4"
      >
        <div
          class="MuiToolbar-root MuiToolbar-regular sc-gKsewC bvkgnn MuiToolbar-gutters"
        >
          <button
            aria-label="open drawer"
            class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit MuiIconButton-edgeStart"
            tabindex="0"
            type="button"
          >
            <span
              class="MuiIconButton-label"
            >
              <svg
                aria-hidden="true"
                class="MuiSvgIcon-root"
                focusable="false"
                viewBox="0 0 24 24"
              >
                <path
                  d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"
                />
              </svg>
            </span>
            <span
              class="MuiTouchRipple-root"
            />
          </button>
        </div>
      </header>
      <div
        class="react-html5-camera-photo "
      >
        <div
          class=" normal"
          id="white-flash"
        />
        <img
          alt="camera"
          src=""
          style="display: none;"
        />
        <video
          autoplay=""
          playsinline=""
          style="transform: none; display: inline-block;"
        />
        <div
          id="container-circles"
        >
          <div
            id="outer-circle"
          >
            <div
              class=""
              id="inner-circle"
            />
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
